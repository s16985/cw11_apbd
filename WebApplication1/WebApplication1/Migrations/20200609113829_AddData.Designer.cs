// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(CodeFirstDbContext))]
    [Migration("20200609113829_AddData")]
    partial class AddData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.Models.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdDoctor")
                        .HasName("Doctor_pk");

                    b.ToTable("Doctor");

                    b.HasData(
                        new
                        {
                            IdDoctor = 1,
                            Email = "aa@a.pl",
                            FirstName = "Adam",
                            LastName = "Adamowicz"
                        },
                        new
                        {
                            IdDoctor = 2,
                            Email = "bb@b.pl",
                            FirstName = "Bartłomiej",
                            LastName = "Bart"
                        },
                        new
                        {
                            IdDoctor = 3,
                            Email = "cc@c.pl",
                            FirstName = "Cezary",
                            LastName = "Cesarz"
                        },
                        new
                        {
                            IdDoctor = 4,
                            Email = "dd@d.pl",
                            FirstName = "Dariusz",
                            LastName = "Dziekanowski"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdMedicament")
                        .HasName("Medicament_pk");

                    b.ToTable("Medicament");

                    b.HasData(
                        new
                        {
                            IdMedicament = 11,
                            Description = "Przeciwbólowy",
                            Name = "Apap",
                            Type = "Tabletki"
                        },
                        new
                        {
                            IdMedicament = 12,
                            Description = "Przeciwbólowy",
                            Name = "Ibuprom",
                            Type = "Tabletki"
                        },
                        new
                        {
                            IdMedicament = 13,
                            Description = "Przecizapalny",
                            Name = "Eurespal",
                            Type = "Syrop"
                        },
                        new
                        {
                            IdMedicament = 14,
                            Description = "Witamina C",
                            Name = "Rutinoscorbin",
                            Type = "Tabletki"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdPatient")
                        .HasName("Patient_pk");

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            IdPatient = 11,
                            Birthdate = new DateTime(1989, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Edgar",
                            LastName = "Edgarovic"
                        },
                        new
                        {
                            IdPatient = 21,
                            Birthdate = new DateTime(1978, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Filip",
                            LastName = "Filipczak"
                        },
                        new
                        {
                            IdPatient = 31,
                            Birthdate = new DateTime(1967, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Grzegorz",
                            LastName = "Grzegorzewski"
                        },
                        new
                        {
                            IdPatient = 41,
                            Birthdate = new DateTime(1996, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Henryk",
                            LastName = "Sienkiewicz"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Prescription", b =>
                {
                    b.Property<int>("IdPrescription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("date");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.HasKey("IdPrescription")
                        .HasName("Prescription_pk");

                    b.HasIndex("IdDoctor");

                    b.HasIndex("IdPatient");

                    b.ToTable("Prescription");

                    b.HasData(
                        new
                        {
                            IdPrescription = 41,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 1,
                            IdPatient = 11
                        },
                        new
                        {
                            IdPrescription = 42,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 2,
                            IdPatient = 21
                        },
                        new
                        {
                            IdPrescription = 43,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 3,
                            IdPatient = 31
                        },
                        new
                        {
                            IdPrescription = 44,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 4,
                            IdPatient = 41
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.PrescriptionMedicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .HasColumnType("int");

                    b.Property<int>("IdPrescription")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Dose")
                        .HasColumnType("int");

                    b.HasKey("IdMedicament", "IdPrescription")
                        .HasName("Prescription_Medicament_pk");

                    b.HasIndex("IdPrescription");

                    b.ToTable("Prescription_Medicament");

                    b.HasData(
                        new
                        {
                            IdMedicament = 11,
                            IdPrescription = 41,
                            Details = "Szczegóły recepty: ",
                            Dose = 10
                        },
                        new
                        {
                            IdMedicament = 12,
                            IdPrescription = 42,
                            Details = "Szczegóły recepty: ",
                            Dose = 20
                        },
                        new
                        {
                            IdMedicament = 13,
                            IdPrescription = 43,
                            Details = "Szczegóły recepty: ",
                            Dose = 30
                        },
                        new
                        {
                            IdMedicament = 14,
                            IdPrescription = 44,
                            Details = "Szczegóły recepty: ",
                            Dose = 40
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Prescription", b =>
                {
                    b.HasOne("WebApplication1.Models.Doctor", "Doctor")
                        .WithMany("Prescription")
                        .HasForeignKey("IdDoctor")
                        .HasConstraintName("Prescription_Doctor")
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Patient", "Patient")
                        .WithMany("Prescription")
                        .HasForeignKey("IdPatient")
                        .HasConstraintName("Prescription_Patient")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.PrescriptionMedicament", b =>
                {
                    b.HasOne("WebApplication1.Models.Medicament", "IdMedicamentNavigation")
                        .WithMany("PrescriptionMedicament")
                        .HasForeignKey("IdMedicament")
                        .HasConstraintName("Prescription_Medicament_Medicament")
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Prescription", "IdPrescriptionNavigation")
                        .WithMany("PrescriptionMedicament")
                        .HasForeignKey("IdPrescription")
                        .HasConstraintName("Prescription_Medicament_Prescription")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
